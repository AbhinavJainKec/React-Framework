{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","RenderDish","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","required","val","length","maxLenght","len","CommentForm","state","isModalOpen","handleShowSubmitCommentModal","bind","handleSubmitComment","this","setState","values","console","log","JSON","stringify","alert","rating","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Col","Label","htmlFor","select","model","text","placeholder","validators","minLenght","show","messages","textarea","rows","type","color","Component","DishDetail","Header","isNavOpen","toggleNav","toggleModal","handleLogin","event","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","maxLength","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","postFeedback","resetFeedbackForm","role","md","size","offset","checkbox","RenderLeader","leaders","Media","list","tag","left","middle","object","body","heading","About","CardHeader","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","feedback","Feedback","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e9104bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function  RenderMenuItem({ dish }) {\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/home'>Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr></hr>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    \r\n        }\r\n    }\r\n        \r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button, Col, Row, Modal, ModalBody, ModalHeader, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish({dish}) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments !=null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key = {comment.id}>\r\n                                            <p>{comment.comment}</p>\r\n                                            <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/menu'>Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr></hr>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    const required = (val) => val && val.length;\r\n    const maxLenght = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLenght = (len) => (val) => (val) && (val.length > len);\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                isModalOpen: false\r\n            }\r\n\r\n            this.handleShowSubmitCommentModal = this.handleShowSubmitCommentModal.bind(this);\r\n            this.handleSubmitComment = this.handleSubmitComment.bind(this);\r\n\r\n        }\r\n\r\n        handleShowSubmitCommentModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            })\r\n        }\r\n\r\n        handleSubmitComment(values) {\r\n            console.log('Current State Is :' + JSON.stringify(values));\r\n            alert('Current State Is :' + JSON.stringify(values));\r\n            this.handleShowSubmitCommentModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                    <div>\r\n                        <Button outline onClick={this.handleShowSubmitCommentModal}>\r\n                            <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                        </Button>\r\n                    </div>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.handleShowSubmitCommentModal}>\r\n                        <ModalHeader toggle={this.handleShowSubmitCommentModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\r\n                                <Row className=\"form-group\">                                \r\n                                    <Col>\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                        <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">                                \r\n                                    <Col>\r\n                                        <Label htmlFor=\"author\">Your name</Label>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" validators={{ required, minLenght: minLenght(2), maxLenght: maxLenght(15) }}/>\r\n                                        <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required ', minLenght: 'Must be greater than 2 characters ', maxLenght: 'Must be 15 characters or less ' }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">                                \r\n                                    <Col>\r\n                                        <Label htmlFor=\"comment\">Comment</Label>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\"/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"UserName: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        console.log(\"Current State Is: \" + JSON.stringify(values));\r\n        alert(\"Current State Is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr></hr>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}/>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: ' Required ', minLength: ' Must Be Greater Than 2 Characters ', maxLength: ' Must Be 15 Characters Or Less '}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}/>\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: ' Required ', minLength: ' Must Be Greater Than 2 Characters ', maxLength: ' Must Be 15 Characters Or Less '}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\" validators={{required, minLength: minLength(3), maxLength: maxLength(15), isNumber}}/>\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{required: ' Required ', minLength: ' Must Be Greater Than 2 Numbers ', maxLength: ' Must Be 15 Numbers Or Less ', isNumber: ' Must Be A Number '}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" validators={{required, validEmail}}/>\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: ' Required ', validEmail: ' Invalid Email Address '}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\"/>\r\n                                            {' '}\r\n                                            <strong>May We Contact You ?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" placeholder=\"Feedback\" rows=\"12\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({ leaders, isLoading, errMess }) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return(\n            <div className=\"col-12 mt-5\">\n                <Media list>\n                    <Stagger in>\n                        {leaders.leaders.map((leader) => {\n                            return (\n                                <Fade in key={leader.id}>\n                                    <Media tag='li'>\n                                        <Media left middle>\n                                            <Media object src={baseUrl + leader.image} alt={leader.name} />\n                                        </Media>\n                                        <Media body className=\"ml-5\">\n                                            <Media heading>{leader.name}</Media>\n                                            <p>{leader.designation}</p>\n                                            <p>{leader.description}</p>\n                                        </Media>\n                                    </Media>\n                                </Fade>\n                            );\n                        })}\n                    </Stagger>\n                </Media>\n            </div>\n        );\n    }\n}\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                <Media list>\n                    <RenderLeader leaders={props.leaders} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\n                </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('Post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: ' + error.message); \r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = Feedback => dispatch => {\r\n    const newFeedback = {...Feedback, date: new Date().toISOString()};\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response)))\r\n    .catch(error => { console.log('Post feedback ', error.message);\r\n        alert('Your feedback could not be posted\\nError: ' + error.message);\r\n    })\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders: () => {dispatch(fetchLeaders())},\r\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return(\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment} \r\n                />\r\n            );\r\n        }\r\n        return (\r\n        <div>\r\n            <Header></Header>\r\n            <TransitionGroup>\r\n                <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch>\r\n                        <Route path=\"/home\" component={ HomePage } />\r\n                        <Route exact path=\"/aboutus\" component={ () => <About leaders={this.props.leaders}/> } />\r\n                        <Route exact path=\"/menu\" component={ () => <Menu dishes={this.props.dishes} /> } />\r\n                        <Route path=\"/menu/:dishId\" component={ DishWithId } />\r\n                        <Route exact path=\"/contactus\" component={ () => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} /> } />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer></Footer>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true, errmess: null, dishes: [] }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errmess: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errmess: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errmess: action.payload, dishes: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true, errMess: null, promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true, errMess: null, leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}